- name: create keystone database
  mysql_db: name=keystone state=present login_password="{{ ROOT_DBPASS }}"

- name: grant access to keystone database
  command: mysql --password="{{ ROOT_DBPASS }}" -e "GRANT ALL PRIVILEGES ON keystone.* TO 'keystone'@'{{ item }}' IDENTIFIED BY '{{ KEYSTONE_DBPASS }}'"
  with_items:
  - localhost
  - '%'

- name: generate keystone admin token
  script: admin_token.py
  register: admin_token

- name: install keystone packages
  yum: name="{{ item }}" state=present
  with_items:
  - openstack-keystone
  - httpd
  - mod_wsgi

- name: configure keystone.conf
  ini_file: dest=/etc/keystone/keystone.conf section="{{ item.section }}" option="{{ item.option }}" value="{{ item.value }}" backup=yes
  with_items:
  - { section: DEFAULT, option: admin_token, value: "{{ admin_token.stdout_lines[0] }}" }
  - { section: database, option: connection, value: "mysql+pymysql://keystone:{{ KEYSTONE_DBPASS }}@{{ ansible_hostname }}/keystone" }
  - { section: token, option: provider, value: fernet }

- name: populate identity service database
  become_user: keystone
  command: "keystone-manage db_sync"

- name: init fernet keys
  command: keystone-manage fernet_setup --keystone-user keystone --keystone-group keystone

- name: set ServerName in Apache config
  lineinfile: dest=/etc/httpd/conf/httpd.conf regexp="#?ServerName" line="ServerName {{ ansible_hostname }}"

- name: create wsgi file
  template: src=wsgi-keystone.conf dest=/etc/httpd/conf.d/wsgi-keystone.conf mode=600 owner=root group=root

- name: enable and start service
  service: name=httpd state=started enabled=yes

- name: create service entity, API endpoints, domains, projects, users and roles
  script: "keystone_default_setup.py --adminpassword '{{ ADMIN_PASS }}' --demopassword '{{ DEMO_PASS }}'"
  environment:
    OS_PROJECT_DOMAIN_NAME: default
    OS_USER_DOMAIN_NAME: default
    OS_PROJECT_NAME: admin
    OS_USERNAME: admin
    OS_PASSWORD: "{{ ADMIN_PASS }}"
    OS_AUTH_URL: "http://{{ ansible_hostname }}:35357/v3"
    OS_IDENTITY_API_VERSION: 3
    OS_IMAGE_API_VERSION: 2
#    OS_TOKEN: '{{ admin_token.stdout_lines[0] }}'
#    OS_URL: "http://{{ ansible_hostname }}:35357/v3"

- name: remove admin_token_auth from keystone-paste.ini
  replace: dest=/etc/keystone/keystone-paste.ini regexp="(pipeline *=.*)( admin_token_auth)(.*)" replace="\1\3"

- name: verify keystone operation
  shell: "openstack --os-auth-url http://{{ ansible_hostname }}:{{ item.port }}/v3 --os-project-domain-name default --os-user-domain-name default   --os-project-name {{item.project}} --os-username {{item.user}} token issue --os-password {{item.password}} -f json  "
  with_items:
    - { port: 5000, project: admin, user: admin, password: "{{ ADMIN_PASS }}" }
    - { port: 35357, project: demo, user: demo, password: "{{ DEMO_PASS }}" }
  register: verify_keystone

- name: deploy openrc files
  template: src="{{ item }}" dest="/root/{{ item }}" owner=root group=root mode=400
  with_items:
    - demo-openrc
    - admin-openrc
